{"ast":null,"code":"var _jsxFileName = \"/Users/hari/Downloads/iPackUIModified-main/src/components/ToolList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginRight: 'auto',\n    marginLeft: 'auto',\n    height: '100'\n  },\n  paper: {\n    width: 400,\n    height: 400,\n    borderRadius: 15,\n    boxShadow: '0 3px 5px 2px rgba(86, 98, 226, 0.3)'\n  },\n  table: {\n    maxWidth: '80%'\n  },\n  tableContainer: {\n    width: 960,\n    height: 'auto',\n    borderRadius: 13,\n    boxShadow: '0 3px 5px 2px rgba(86, 98, 226, 0.3)'\n  },\n  submit: {\n    width: 960,\n    height: 'auto'\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  }\n}));\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nexport default function ToolList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([\"Jenkins\", \"Nexus\", \"SonarQube\", \"Aquasec\", \"Docker\", \"Chef\"]);\n  const [right, setRight] = React.useState([]);\n  const [vmIpAddress, setVmIpAddress] = React.useState();\n  const [vmUserName, setVmUserName] = React.useState('');\n  const [vmPassword, setVmPassword] = React.useState('');\n  const [ipAddressError, setIpAddressError] = React.useState(false);\n  const [userError, setUserError] = React.useState(false);\n  const [passwordError, setPasswordError] = React.useState(false);\n  const [ipErrorMessage, setIpErrorMessage] = React.useState('');\n  const [userErrorMessage, setUserErrorMessage] = React.useState('');\n  const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\n  const [responseMessage, setResponseMessage] = React.useState('');\n  const [responseErrorMessage, setResponseErrorMessage] = React.useState('');\n  const [disabled, isDisabled] = useState(true);\n  useEffect(() => {\n    console.log(\"in Use Effect\");\n\n    if (vmIpAddress !== \"\" && vmUserName !== \"\" && vmPassword !== \"\") {\n      isDisabled(false);\n    } else {\n      isDisabled(true);\n    }\n  });\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = items => /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    component: \"div\",\n    role: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, items.map(value => {\n    const labelId = `transfer-list-item-${value}-label`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value,\n      role: \"listitem\",\n      button: true,\n      onClick: handleToggle(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  })));\n\n  const ipAddressChangeHandler = event => {\n    let ipAddress = event.target.value;\n    console.log(ipAddress);\n\n    if (ipAddress.trim() === \"\") {\n      setIpAddressError(true);\n      setIpErrorMessage('IP Address should not be empty');\n      setVmIpAddress(\"\");\n    } else {\n      setIpAddressError(false);\n      setIpErrorMessage(\"\");\n      setVmIpAddress(event.target.value);\n    }\n  };\n\n  const vmUserNameChangeHandler = event => {\n    const username = event.target.value;\n\n    if (username.trim() === \"\") {\n      setUserError(true);\n      setUserErrorMessage('VM Username should not empty');\n      setVmUserName(\"\");\n    } else {\n      setUserError(false);\n      setUserErrorMessage('');\n      setVmUserName(username);\n    }\n  };\n\n  const vmPasswordChangeHandler = event => {\n    const password = event.target.value;\n\n    if (password.trim() === \"\") {\n      setPasswordError(true);\n      setPasswordErrorMessage('VM Password should not be empty');\n      setVmPassword(\"\");\n    } else {\n      setPasswordError(false);\n      setPasswordErrorMessage('');\n      setVmPassword(password);\n    }\n  };\n\n  const createVM = () => {\n    const ipAddress = vmIpAddress;\n    const username = vmUserName;\n    const password = vmPassword;\n    const softwares = right;\n    console.log(\"Ip Address\", ipAddress, \"username\", username, \"Password\", password, \"Softwares\", softwares);\n    axios.post(`http://server/ClientIP=${vmIpAddress}&ClientUserName=${vmUserName}&ClientPwd=${vmPassword}&Softwares=${softwares}`).then(response => {\n      console.log(response);\n      setVmIpAddress('');\n      setVmUserName('');\n      setVmPassword('');\n      setRight([]);\n      setLeft([\"Jenkins\", \"Nexus\", \"SonarQube\", \"Aquasec\", \"Docker\", \"Chef\"]);\n      setResponseMessage(\"VM Created Successfully\");\n    }).catch(error => {\n      console.log(error);\n      setResponseErrorMessage(\"Unable create VM please try again\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    md: 8,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.tableContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, \"Enter VM IP Address\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: ipAddressError,\n    id: \"outlined-basic\",\n    label: \"IP Address of VM\",\n    variant: \"outlined\",\n    helperText: ipErrorMessage,\n    onChange: event => ipAddressChangeHandler(event),\n    value: vmIpAddress,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, \"Enter VM UserName\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: userError,\n    id: \"outlined-basic\",\n    label: \"VM UserName\",\n    variant: \"outlined\",\n    helperText: userErrorMessage,\n    onChange: event => vmUserNameChangeHandler(event),\n    value: vmUserName,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, \"Enter VM Password\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: passwordError,\n    id: \"outlined-basic\",\n    label: \"VM Password\",\n    variant: \"outlined\",\n    helperText: passwordErrorMessage,\n    onChange: event => vmPasswordChangeHandler(event),\n    value: vmPassword,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 3\n    }\n  }, responseMessage), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 3\n    }\n  }, responseErrorMessage), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }, customList(left)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    disabled: left.length === 0,\n    \"aria-label\": \"move all right\",\n    onClick: handleAllRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, \"\\u226B\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    disabled: leftChecked.length === 0,\n    \"aria-label\": \"move selected right\",\n    onClick: handleCheckedRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }, \">\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    disabled: rightChecked.length === 0,\n    \"aria-label\": \"move selected left\",\n    onClick: handleCheckedLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, \"<\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    disabled: right.length === 0,\n    \"aria-label\": \"move all left\",\n    onClick: handleAllLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, \"\\u226A\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }\n  }, customList(right)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: createVM,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }, \" Create VM \"))))));\n}","map":{"version":3,"sources":["/Users/hari/Downloads/iPackUIModified-main/src/components/ToolList.js"],"names":["React","useEffect","useState","makeStyles","Grid","List","ListItem","ListItemIcon","ListItemText","Checkbox","Button","Paper","Table","TableCell","TableContainer","TableRow","TextField","axios","useStyles","theme","root","marginRight","marginLeft","height","paper","width","borderRadius","boxShadow","table","maxWidth","tableContainer","submit","button","margin","spacing","not","a","b","filter","value","indexOf","intersection","ToolList","classes","checked","setChecked","left","setLeft","right","setRight","vmIpAddress","setVmIpAddress","vmUserName","setVmUserName","vmPassword","setVmPassword","ipAddressError","setIpAddressError","userError","setUserError","passwordError","setPasswordError","ipErrorMessage","setIpErrorMessage","userErrorMessage","setUserErrorMessage","passwordErrorMessage","setPasswordErrorMessage","responseMessage","setResponseMessage","responseErrorMessage","setResponseErrorMessage","disabled","isDisabled","console","log","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","handleAllRight","concat","handleCheckedRight","handleCheckedLeft","handleAllLeft","customList","items","map","labelId","ipAddressChangeHandler","event","ipAddress","target","trim","vmUserNameChangeHandler","username","vmPasswordChangeHandler","password","createVM","softwares","post","then","response","catch","error","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginRight: 'auto',\n    marginLeft: 'auto',\n    height: '100',\n  },\n  paper: {\n    width: 400,\n    height: 400,\n    borderRadius: 15,\n    boxShadow: '0 3px 5px 2px rgba(86, 98, 226, 0.3)',\n  },\n  table: {\n    maxWidth: '80%',\n  },\n  tableContainer: {\n    width: 960,\n    height: 'auto',\n    borderRadius: 13,\n    boxShadow: '0 3px 5px 2px rgba(86, 98, 226, 0.3)',\n  },\n  submit: {\n    width: 960,\n    height: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n}));\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nexport default function ToolList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([\"Jenkins\", \"Nexus\", \"SonarQube\", \"Aquasec\", \"Docker\", \"Chef\"]);\n  const [right, setRight] = React.useState([]);\n  const [vmIpAddress, setVmIpAddress] = React.useState();\n  const [vmUserName , setVmUserName] = React.useState('');\n  const [vmPassword , setVmPassword] = React.useState('');\n  const [ipAddressError,setIpAddressError] = React.useState(false);\n  const [userError,setUserError] = React.useState(false);\n  const [passwordError,setPasswordError] = React.useState(false);\n  const [ipErrorMessage,setIpErrorMessage] = React.useState('');\n  const [userErrorMessage , setUserErrorMessage] = React.useState('');\n  const [passwordErrorMessage , setPasswordErrorMessage] = React.useState('');\n  const [responseMessage,setResponseMessage] = React.useState('');\n  const [responseErrorMessage,setResponseErrorMessage] = React.useState('');\n  const [disabled,isDisabled] = useState(true);\n\nuseEffect(() => {\n\n  console.log(\"in Use Effect\")\n  if(vmIpAddress !== \"\" && vmUserName !== \"\" && vmPassword !== \"\"){\n    isDisabled(false)\n  }else{\n    isDisabled(true);\n  }\n})\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = (items) => (\n    <Paper className={classes.paper}>\n      <List dense component=\"div\" role=\"list\">\n        {items.map((value) => {\n          const labelId = `transfer-list-item-${value}-label`;\n\n          return (\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`${value}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  );\n\n  const ipAddressChangeHandler = event => {\n\n    \n    let ipAddress = event.target.value;\n    console.log(ipAddress)\n    if(ipAddress.trim() === \"\" )\n    {\n      setIpAddressError(true);\n      setIpErrorMessage('IP Address should not be empty');\n      setVmIpAddress(\"\");\n    }\n    else{\n      setIpAddressError(false)\n    setIpErrorMessage(\"\")\n    setVmIpAddress(event.target.value);\n  }\n}\n\n  const vmUserNameChangeHandler = event => {\n\n    const username = event.target.value;\n    if(username.trim() === \"\" )\n    {\n      setUserError(true);\n      setUserErrorMessage('VM Username should not empty');\n      setVmUserName(\"\");\n    }else {\n      setUserError(false);\n      setUserErrorMessage('');\n    setVmUserName(username);\n  }\n}\n\n  const vmPasswordChangeHandler = event => {\n    const password = event.target.value;\n    if(password.trim() === \"\"){\n      setPasswordError(true);\n      setPasswordErrorMessage('VM Password should not be empty');\n      setVmPassword(\"\")\n    }else {\n      setPasswordError(false)\n      setPasswordErrorMessage('');\n      setVmPassword(password)\n    }\n\n\n  }\n\n  const createVM = () => {\n\n    const ipAddress = vmIpAddress;\n    const username = vmUserName;\n    const password = vmPassword;\n    const softwares = right;\n\n\n    console.log(\"Ip Address\" , ipAddress , \"username\" , username , \"Password\" , password , \"Softwares\" , softwares);\n\n   \n    axios.post(`http://server/ClientIP=${vmIpAddress}&ClientUserName=${vmUserName}&ClientPwd=${vmPassword}&Softwares=${softwares}`).then(\n      response => {\n      console.log(response);\n      setVmIpAddress('');\n      setVmUserName('');\n      setVmPassword('');\n      setRight([]);\n      setLeft([\"Jenkins\", \"Nexus\", \"SonarQube\", \"Aquasec\", \"Docker\", \"Chef\"]);\n      setResponseMessage(\"VM Created Successfully\")\n      }\n    ).catch(error => {\n      console.log(error);\n      setResponseErrorMessage(\"Unable create VM please try again\")\n    })\n\n  }\n\n  return (\n    <Grid container spacing={6} className={classes.root}>\n      <Grid item xs={8} md={8} lg={12}>\n        <form noValidate autoComplete=\"off\">\n          <TableContainer component={Paper} className={classes.tableContainer}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableRow>\n                <TableCell align=\"right\" >Enter VM IP Address</TableCell>\n                <TableCell align=\"right\">\n                  <TextField \n                  error= {ipAddressError}\n                  id=\"outlined-basic\" \n                  label=\"IP Address of VM\" \n                  variant=\"outlined\" \n                  helperText={ipErrorMessage}\n                  onChange={event => ipAddressChangeHandler(event)}\n                  value={vmIpAddress}\n                  required/>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell align=\"right\" >Enter VM UserName</TableCell>\n                <TableCell align=\"right\">\n                  <TextField \n                  error= {userError}\n                  id=\"outlined-basic\" \n                  label=\"VM UserName\" \n                  variant=\"outlined\" \n                  helperText={userErrorMessage}\n                  onChange={event => vmUserNameChangeHandler(event)}\n                  value={vmUserName}\n                  required/>\n                </TableCell>\n                <TableCell align=\"right\" >Enter VM Password</TableCell>\n                <TableCell align=\"right\">\n                  <TextField \n                  error= {passwordError}\n                  id=\"outlined-basic\" \n                  label=\"VM Password\" \n                  variant=\"outlined\" \n                  helperText={passwordErrorMessage}\n                  onChange={event => vmPasswordChangeHandler(event)}\n                  value={vmPassword}\n                  required/>\n                </TableCell>              \n              </TableRow>\n            </Table>\n          </TableContainer>\n        </form>\n      </Grid>\n  <p>{responseMessage}</p>\n  <p>{responseErrorMessage}</p>\n      <Grid item>{customList(left)}</Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"center\" >\n          <Button variant=\"outlined\" size=\"small\" className={classes.button} disabled={left.length === 0} aria-label=\"move all right\"\n            onClick={handleAllRight}>\n            ≫\n          </Button>\n          <Button variant=\"outlined\" size=\"small\" className={classes.button} disabled={leftChecked.length === 0} aria-label=\"move selected right\"\n            onClick={handleCheckedRight}>\n            &gt;\n          </Button>\n          <Button variant=\"outlined\" size=\"small\" className={classes.button} disabled={rightChecked.length === 0} aria-label=\"move selected left\"\n            onClick={handleCheckedLeft}>\n            &lt;\n          </Button>\n          <Button variant=\"outlined\" size=\"small\" className={classes.button} disabled={right.length === 0} aria-label=\"move all left\"\n            onClick={handleAllLeft}>\n            ≪\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList(right)}</Grid>\n\n      <Grid item className={classes.submit}>\n        <form noValidate autoComplete=\"off\">\n          <Table aria-label=\"simple table\">\n            <TableRow align=\"right\">\n              <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={createVM} disabled={disabled}> Create VM </Button>\n            </TableRow>\n          </Table>\n        </form>\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}